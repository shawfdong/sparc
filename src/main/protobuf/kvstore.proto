syntax = "proto3";

package kvstore;

option java_package = "org.jgi.spark.localcluster.kvstore";
option java_outer_classname = "KVStoreProtos";
option java_generic_services = true;


service KVStore {
    rpc incr_kmer_in_batch (KmerBatchRequest) returns (Empty) {
    }
    rpc get_kmer_counts (KmerCountRequest) returns (KmerCountReply) {
    }
    rpc incr_edge_in_batch (EdgeBatchRequest) returns (Empty) {
    }
    rpc get_Edge_counts (EdgeCountRequest) returns (EdgeCountReply) {
    }

    rpc flush (Empty) returns (FlushReply) {
    }

    rpc Ping (Empty) returns (PingReply) {
    }


}

message Empty {
}
message PingReply {
    string reply = 1;
}
message FlushReply {
    string reply = 1;
}

/******************* kmers **************************/
message KmerBatchRequest {
    repeated bytes kmers = 1;
    bool use_bloom_filter = 2;
}


message KmerCount {
    bytes kmer = 1;
    int32 count = 2;
}
message KmerCountRequest {
    bool use_bloom_filter = 1;
    int32 minimum_count = 2;
}

message KmerCountReply {
    repeated KmerCount batch = 1;
}

/******************* edges **************************/
message ReadEdge {
    int32 src = 1;
    int32 dest = 2;
}

message ReadEdgeCount {
    int32 src = 1;
    int32 dest = 2;
    int32 count = 3;
}

message EdgeBatchRequest {
    repeated ReadEdge edges = 1;
    bool use_bloom_filter = 2;
}

message EdgeCountRequest {
    bool use_bloom_filter = 1;
    int32 minimum_count = 2;
}

message EdgeCountReply {
    repeated ReadEdgeCount batch = 1;
}